exit();

import "cnc/gcode.goat";
import "io.goat";
import "cnc/interpolator.goat";
import "bitmap.goat";
import "color.goat";

var raw = load("gcode.txt");
var source = raw.decode("utf8");
//var source = "g00x0y0m500\ng1 g57   X-100.1";

var bmp = new Bmp24(2000, 1500);

var gcode = GCode.parse(source);
println(gcode.length());
var p0 = new Point();
p0.X = 0.0;
p0.Y = 0.0;
p0.Z = 0.0;
for (var i in gcode)
{
    if (i.G)
    {
        try
        {
            var q = null;
            var c = White;
            if (indexOf(i.G, 0) != -1)
            {
                var p1 = new Point();
                p1.X = i.X || p0.X;
                p1.Y = i.Y || p0.Y;
                p1.Z = i.Z || p0.Z;
                q = linearInterpolator(p0, p1, 5);
                c = Red;
                p0 = p1;
            }
            else if (indexOf(i.G, 1) != -1)
            {
                var p1 = new Point();
                p1.X = i.X || p0.X;
                p1.Y = i.Y || p0.Y;
                p1.Z = i.Z || p0.Z;
                q = linearInterpolator(p0, p1, 5);
                p0 = p1;
            }
            else if (indexOf(i.G, 2) != -1)
            {
                var p1 = new Point();
                p1.X = i.X || p0.X;
                p1.Y = i.Y || p0.Y;
                p1.Z = i.Z || p0.Z;
                var p2 = new Point();
                p2.X = p0.X + i.I || 0;
                p2.Y = p0.Y + i.J || 0;
                p2.Z = p0.Z;
                q = circularInterpolator(p0, p1, p2, true, 5);
                p0 = p1;
            }
            else if (indexOf(i.G, 3) != -1)
            {
                var p1 = new Point();
                p1.X = i.X || p0.X;
                p1.Y = i.Y || p0.Y;
                p1.Z = i.Z || p0.Z;
                var p2 = new Point();
                p2.X = p0.X + i.I || 0;
                p2.Y = p0.Y + i.J || 0;
                p2.Z = p0.Z;
                q = circularInterpolator(p0, p1, p2, false, 5);
                p0 = p1;
            }
            if (q)
            {
                for (var p in q)
                {
                    bmp[round(p.X * 5), 1500 - round(p.Y * 5)] = c;
                }
            }
        }
        catch(e)
        {
        }
    }
}

var arr = bmp.toByteArray();
var file = open("image.bmp", File.Mode.WRITE);
file.write(arr);
file.close();