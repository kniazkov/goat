import "cnc/interpolator.goat";
import "cnc/stepper_motor.goat";
import "atomic.goat";
import "mutex.goat";
import "bitmap.goat";
import "color.goat";

var points = linearInterpolator({X : 0, Y : 0, Z : 0}, {X : 30, Y : 20, Z : 0}, 5);
println(points.length());

exit(0);

var index = new Atomic(0);
var p0 = { X : 0, Y : 0, Z : 0 };
var motorX;
var motorY;
var velocity = 1.0;
var mutex = new Mutex();
var counter = 0;

var nextStep = $()
{
    println(p0);
        
    while(true)
    {
        if (index.get() >= points.length()) {
            index.set(null);
            return;
        }

        var p1 = points[index.get()];
        index.inc();
        
        // delta
        var dX = Real.valueof(p1.X - p0.X);
        var dY = Real.valueof(p1.Y - p0.Y);
        var dZ = Real.valueof(p1.Z - p0.Z);

        // distance
        var l = sqrt(dX * dX + dY * dY + dZ * dZ);
        if (l > 0)
        {
            // time
            var t = l / velocity;

            // axis velocity
            var vX = dX / t;
            var vY = dY / t;
            var vZ = dZ / t;
            
            // set new target position
            counter = 2;
            motorX.setTargetPosition(p1.X, vX);
            motorY.setTargetPosition(p1.Y, vY);

            p0 = p1;

            return;
        }
    }
};

var listener = $(position)
{
    mutex.lock();
    counter--;
    if (counter == 0)
    {
        nextStep();
    }
    mutex.unlock();
};

var smp = new StepperMotorParameters();
smp.gpioStep = "gpio0";
smp.gpioDirection = "gpio1";
smp.scalingFactor = 10.0;
smp.listener = listener;
motorX = new StepperMotor(smp);

var smp2 = new StepperMotorParameters();
smp2.gpioStep = "gpio2";
smp2.gpioDirection = "gpio3";
smp2.scalingFactor = 10.0;
smp2.listener = listener;
motorY = new StepperMotor(smp2);

var bmp = new Bmp1(400, 300);

nextStep();
while(index.get() != null)
{
    var pX = round(motorX.getPosition() * 10);
    var pY = round(motorY.getPosition() * 10);
    //println(" " + pX);
    bmp[pX, 300 - pY] = White;
}

var file = open("image.bmp", File.Mode.WRITE);
file.write(bmp.toByteArray());
file.close();
