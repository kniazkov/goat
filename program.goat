import "stepper_motor.goat";
import "positioning.goat";

if (!ports.init())
    exit();

var smpX1 = new StepperMotorParameters();
smpX1.gpioEnable = "gpio23";
smpX1.gpioStep = "gpio25";
smpX1.gpioDirection = "gpio12";
smpX1.scalingFactor = 213.93;
smpX1.bitEnabling = false;
smpX1.forwardDirection = false;
var axisX1 = new StepperMotor(smpX1);

var smpX2 = new StepperMotorParameters();
smpX2.gpioEnable = "gpio6";
smpX2.gpioStep = "gpio13";
smpX2.gpioDirection = "gpio5";
smpX2.scalingFactor = 213.93;
smpX2.bitEnabling = false;
smpX2.forwardDirection = false;
var axisX2 = new StepperMotor(smpX2);

var smpY = new StepperMotorParameters();
smpY.gpioEnable = "gpio27";
smpY.gpioStep = "gpio4";
smpY.gpioDirection = "gpio18";
smpY.scalingFactor = 213.93;
smpY.bitEnabling = false;
smpY.forwardDirection = false;
var axisY = new StepperMotor(smpY);

var smpZ = new StepperMotorParameters();
smpZ.gpioEnable = "gpio17";
smpZ.gpioStep = "gpio24";
smpZ.gpioDirection = "gpio22";
smpZ.scalingFactor = 6666.66;
smpZ.bitEnabling = false;
smpZ.forwardDirection = false;
var axisZ = new StepperMotor(smpZ);

axisX1.powerOn();
axisX2.powerOn();
axisY.powerOn();
axisZ.powerOn();

axisY.addTargetPosition(200, 5 * 1000000000);
axisY.addTargetPosition(0, 2 * 5 * 1000000000);
axisY.addTargetPosition(-200, 3 * 5 * 1000000000);
axisY.addTargetPosition(0, 4 * 5 * 1000000000);

axisX1.addTargetPosition(200, 2 * 5 * 1000000000);
axisX2.addTargetPosition(-200, 2 * 5 * 1000000000);
axisX1.addTargetPosition(200, 3 * 5 * 1000000000);
axisX2.addTargetPosition(-200, 3 * 5 * 1000000000);
axisX1.addTargetPosition(0, 4 * 5 * 1000000000);
axisX2.addTargetPosition(0, 4 * 5 * 1000000000);


println("started");
ports.run();
while(ports.busy())
{
    println("" + round(axisX1.getPosition()) + " " + round(axisY.getPosition()));
}
ports.reset();
println("done");

axisX1.powerOff();
axisX2.powerOff();
axisY.powerOff();
axisZ.powerOff();
