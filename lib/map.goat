/*

Copyright (C) 2017-2020 Ivan Kniazkov

This file is part of standard library for programming language
codenamed "Goat" ("Goat standard library").

Goat standard library is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Goat standard library is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with Goat standard library.  If not, see <http://www.gnu.org/licenses/>.

*/

import "collection.goat";

var Map = [AssociativeCollection, MutableCollection] ->
# {
    init : $(data)
    {
        this.data = {};
        this.count = 0;
    },

    size : $()
    {
        return count;
    },

    empty : $()
    {
        return count == 0;
    },

    clear : $()
    {
        data = {};
        count = 0;
    },

    contains : $(element)
    {
        return !!data[element];
    },

    add : $(key, value)
    {
        this.set(key, value);
        return true;
    },

    set : $(key, value)
    {
        var item = data[key];
        if (item)
        {
            item.element = value;
        }
        else
        {
            data[key] = { element: value };
            count++;
        }
    },

    get : $(key)
    {
        var item = data[key];
        return item?.element;
    },

    delete : $(key)
    {
        var item = data[key];
        if (item)
        {
            data[key] = undefined;
            --count;
            return true;
        }
        return false;
    },

    iterator : $()
    {
        var keys = this.toArray();
        return keys.iterator();
    },

    toArray : $()
    {
        var result = [];
        for(var key in data.keys())
        {
            if (data[key])
                result.push(key);
        }
        return result;
    }
};
