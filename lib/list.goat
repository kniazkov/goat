/*

Copyright (C) 2017, 2018 Ivan Kniazkov

This file is part of standard library for programming language
codenamed "Goat" ("Goat standard library").

Goat standard library is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Goat standard library is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with Goat standard library.  If not, see <http://www.gnu.org/licenses/>.

*/

import "iterator.goat";

var List = Iterable -> {

    init : $() {
        this.first = null;
        this.last = null;
    },

    empty : $() {
        return first == null;
    },

    pushBack : $(val) {
        var item = {
            prev : last,
            next : null,
            val : val
        };

        if (first != null) {
            last.next = item;
        }
        else {
            first = item;
        }
        last = item;
    },

    iterator : $() {
        return new List.Iterator(first);
    },
    
    Iterator : Iterator -> {
        
        item : null,
        
        init : $(item) {
            this.item = item;
            this.following = item?.next || null;
        },
        
        valid : $() {
            return item != null;
        },
        
        next : $() {
            if (!item)
                throw new Exception.InvalidOperation();
            item = following;
            following = item?.next || null;
        },
        
        read : $() {
            if (!item)
                throw new Exception.InvalidOperation();
            return item.val;
        },
        
        write : $(val) {
            if (!item)
                throw new Exception.InvalidOperation();
            item.val = val;
        }
    }
};